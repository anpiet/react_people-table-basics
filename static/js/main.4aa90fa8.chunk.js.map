{"version":3,"sources":["components/Home/Home.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Home","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","motherContent","fatherContent","person","motherSlug","fatherSlug","slug","to","motherName","fatherName","cn","sex","name","born","died","PeopleTable","useState","isLoading","setIsLoading","people","setPeople","error","setError","useParams","useEffect","catch","finally","length","map","find","mother","father","NotFoundPage","App","role","isActive","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4aa90fa8.chunk.js","sourcesContent":["export const Home = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype PersonLinkProps = {\n  person: Person,\n  motherSlug: string | undefined,\n  fatherSlug: string | undefined,\n  slug: string | undefined,\n};\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({\n  person,\n  motherSlug,\n  fatherSlug,\n  slug,\n}) => {\n  let motherContent;\n\n  if (motherSlug) {\n    motherContent = (\n      <Link to={`/people/${motherSlug}` as string} className=\"has-text-danger\">\n        {person.motherName}\n      </Link>\n    );\n  } else if (person.motherName) {\n    motherContent = person.motherName;\n  } else {\n    motherContent = '-';\n  }\n\n  let fatherContent;\n\n  if (fatherSlug) {\n    fatherContent = (\n      <Link to={`/people/${fatherSlug}` as string}>\n        {person.fatherName}\n      </Link>\n    );\n  } else if (person.fatherName) {\n    fatherContent = person.fatherName;\n  } else {\n    fatherContent = '-';\n  }\n\n  return (\n\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': person.slug === slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}`}\n          className={cn({\n            'has-text-danger': person.sex === 'f',\n          })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {motherContent}\n      </td>\n      <td>\n        {fatherContent}\n      </td>\n    </tr>\n\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../PersonLink';\n\nexport const PeopleTable = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState<boolean>(false);\n\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople().then(setPeople).catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  if (isLoading) {\n    return (\n      <>\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            <Loader />\n          </div>\n        </div>\n      </>\n\n    );\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(people.length === 0 && isLoading === false) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n\n              {people.map(person => (\n\n                <PersonLink\n                  key={person.slug}\n                  person={person}\n                  motherSlug={\n                    people.find(\n                      mother => mother.name === person.motherName,\n                    )?.slug\n                  }\n                  fatherSlug={\n                    people.find(\n                      father => father.name === person.fatherName,\n                    )?.slug\n                  }\n                  slug={slug}\n                />\n\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n\n  );\n};\n","export const NotFoundPage = () => (<h1 className=\"title\">Page not found</h1>);\n","import {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { Home } from './components/Home';\nimport { PeopleTable } from './components/PeopleTable';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => (isActive\n              ? 'navbar-item has-background-grey-lighter'\n              : 'navbar-item')}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => (isActive\n              ? 'navbar-item has-background-grey-lighter'\n              : 'navbar-item')}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/people\" element={<PeopleTable />} />\n          <Route path=\"/people/:slug\" element={<PeopleTable />} />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/*\" element={<NotFoundPage />} />\n\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}